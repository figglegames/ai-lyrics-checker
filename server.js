const knownSongs = require('./known_songs_dataset.json');
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const { Configuration, OpenAIApi } = require('openai');
const fs = require('fs');

const app = express();

// ====== Rate Limit Logic ======
const rateLimitMap = new Map();
const exemptIPs = ['2603:8000:ae00:a5ed:ec30:d3df:80bc:c6bb']; // <-- Replace this with your IP

setInterval(() => {
  rateLimitMap.clear(); // Reset every 24 hours
}, 24 * 60 * 60 * 1000);

app.use('/checkLyrics', (req, res, next) => {
  const ip = req.headers['x-forwarded-for'] || req.socket.remoteAddress;

  if (exemptIPs.includes(ip)) {
    return next(); // Skip rate limit for exempt IPs
  }

  const count = rateLimitMap.get(ip) || 0;

  if (count >= 10) {
    return res.status(429).json({
    error: "You've reached your daily limit of 10 lyric checks. Please come back tomorrow for more free analyses — we’re glad you’re here!"
  });
  }

  rateLimitMap.set(ip, count + 1);
  next();
});
// ===============================

app.use(cors({
  origin: [
    'https://ailyricschecker.com',
    'https://www.ailyricschecker.com',
    'https://lyricsdetector.com',
    'https://www.lyricsdetector.com'
  ]
}));

app.use(bodyParser.json());

const configuration = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

app.post('/checkLyrics', async (req, res) => {
  const lyrics = req.body.lyrics;
  const maxLength = 2000;
  const inputLyrics = lyrics.length > maxLength ? lyrics.slice(0, maxLength) : lyrics;
  const textLower = inputLyrics.toLowerCase();
  const normalize = str => str.toLowerCase().replace(/[“”‘’]/g, '"').replace(/[^\x00-\x7F]/g, '');
  const matchedSong = knownSongs.find(song =>
  normalize(textLower).includes(normalize(song.lyrics_snippet))
  );

  console.log("Checking against known songs...");
  console.log("First 200 chars of input:", textLower.slice(0, 200));
  knownSongs.forEach(song => {
    if (textLower.includes(song.lyrics_snippet.toLowerCase())) {
      console.log("MATCH FOUND:", song.title, song.artist);
    }
});

  if (matchedSong) {
    const matchedResult = {
      verdict: "Human-written",
      confidence: 99,
      explanation: `Match found: "${matchedSong.title}" by ${matchedSong.artist}`
    };

    const logEntry = {
      timestamp: new Date().toISOString(),
      snippet: lyrics.slice(0, 100).replace(/\n/g, ' '),
      verdict: matchedResult.verdict,
      confidence: matchedResult.confidence,
      explanation: matchedResult.explanation
    };

    fs.appendFile('lyrics-log.jsonl', JSON.stringify(logEntry) + '\n', err => {
      if (err) console.error('Logging failed:', err);
    });

    return res.json(matchedResult);
}


  const prompt = `You are an expert lyrics analyst.

    Given the following lyrics, determine if they are:
    A) From a published, recognizable human-written song
    B) Likely human-written but unpublished
    C) Possibly AI-generated
    D) Very likely AI-generated

    When deciding, consider the following:
    - Polished, poetic language does not guarantee human authorship.
    - Be cautious with lyrics that use vague or sentimental Americana themes (e.g., "amber hue", "front porch swing", "home collide").
    - If lyrics seem structurally sound but lack personal specificity, emotional nuance, or originality—despite appearing poetic—treat them as potentially AI-generated.
    - Flag patterns that seem stitched together, overly polished, or emotionally hollow.

    Respond in this JSON format:
    {
    "verdict": "...",
    "confidence": ...,
    "explanation": "..."
    }

    Lyrics:
    """${inputLyrics}"""`;

  try {
    const completion = await openai.createChatCompletion({
      model: "gpt-4-0125-preview",
      temperature: 0.3,
      max_tokens: 150,
      messages: [
        {
          role: "system",
          content: "You are an expert in music and songwriting. When given a set of lyrics, determine whether they are likely written by a human or generated by AI. If the lyrics clearly match or contain a known published song title, recognize that and treat it as human-written. Be concise — respond with a clear verdict and one brief reason."
        },
        {
          role: "user",
          content: "Are these lyrics likely human- or AI-written?\n\n" + prompt
        }
      ]
    });

    const reply = completion.data.choices[0].message.content.trim();

    let parsed;
    try {
      parsed = JSON.parse(reply);
    } catch (e) {
      parsed = { verdict: "Error", confidence: 0, explanation: "Failed to parse reply." };
    }

    const logEntry = {
      timestamp: new Date().toISOString(),
      snippet: lyrics.slice(0, 100).replace(/\n/g, ' '),
      verdict: parsed.verdict,
      confidence: parsed.confidence,
      explanation: parsed.explanation
    };

    fs.appendFile('lyrics-log.jsonl', JSON.stringify(logEntry) + '\n', err => {
      if (err) console.error('Logging failed:', err);
    });

    console.log("GPT Reply:", reply);
    res.setHeader('Content-Type', 'application/json');
    res.send(reply);
  } catch (err) {
    console.error('GPT ERROR:', err);
    res.status(500).json({ error: 'Error analyzing lyrics', details: err.message });
  }
});

const PORT = process.env.PORT || 10000;
app.listen(PORT, () => {
  console.log(`Lyrics checker running on port ${PORT}`);
});
